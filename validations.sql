-- 0 órfãos: fato deve ter chaves válidas nas dimensões
SELECT COUNT(*) AS ORFAOS_CUSTOMER
FROM FACT_SALES f LEFT JOIN DIM_CUSTOMER d ON d.CUSTOMER_SK = f.CUSTOMER_SK
WHERE d.CUSTOMER_SK IS NULL;

SELECT COUNT(*) AS ORFAOS_PRODUCT
FROM FACT_SALES f LEFT JOIN DIM_PRODUCT d ON d.PRODUCT_SK = f.PRODUCT_SK
WHERE d.PRODUCT_SK IS NULL;

SELECT COUNT(*) AS ORFAOS_ORDER
FROM FACT_SALES f LEFT JOIN DIM_ORDER d ON d.ORDER_SK = f.ORDER_SK
WHERE d.ORDER_SK IS NULL;

-- Reconciliação de receita (comparando item por item)
SELECT SUM(QUANTITY * UNIT_PRICE) AS RECEITA_STAGING FROM STAGING.ORDER_ITEMS;
SELECT SUM(GROSS_AMOUNT)          AS RECEITA_FATO    FROM FACT_SALES;

-- Reconciliação de totais de pedidos
SELECT SUM(TOTAL_AMOUNT) AS TOTAL_PEDIDOS_STAGING FROM STAGING.ORDERS;
SELECT 
    SUM(t.TOTAL_AMOUNT) AS TOTAL_PEDIDOS_FATO
FROM (
    SELECT DISTINCT do.ORDER_SK, do.TOTAL_AMOUNT
    FROM CORE.FACT_SALES fa
    JOIN CORE.DIM_ORDER do ON do.ORDER_SK = fa.ORDER_SK
) t;

-- Reconciliação de impostos
SELECT SUM(TAX_AMOUNT) AS IMPOSTOS_STAGING FROM STAGING.ORDERS;
SELECT 
    SUM(t.TAX_AMOUNT) AS IMPOSTOS_FATO
FROM (
    SELECT DISTINCT do.ORDER_SK, do.TAX_AMOUNT
    FROM CORE.FACT_SALES fa
    JOIN CORE.DIM_ORDER do ON do.ORDER_SK = fa.ORDER_SK
) t;


-- Unicidade do grain
SELECT ORDER_ID, ORDER_ITEM, COUNT(*) CNT
FROM FACT_SALES GROUP BY 1,2 HAVING COUNT(*) > 1;

-- Verificar se número de itens está consistente
SELECT 'STAGING' AS ORIGEM, COUNT(*) AS TOTAL_ITENS FROM STAGING.ORDER_ITEMS
UNION ALL
SELECT 'FATO' AS ORIGEM, COUNT(*) AS TOTAL_ITENS FROM FACT_SALES;

-- Verificar se número de pedidos está consistente
SELECT 'STAGING' AS ORIGEM, COUNT(DISTINCT ORDER_ID) AS TOTAL_PEDIDOS FROM STAGING.ORDERS
UNION ALL
SELECT 'FATO' AS ORIGEM, COUNT(DISTINCT ORDER_ID) AS TOTAL_PEDIDOS FROM FACT_SALES;

-- Distribuição diária
SELECT d.DDATE, SUM(GROSS_AMOUNT) AS RECEITA_DIA
FROM FACT_SALES f
JOIN DIM_DATE d ON d.DATE_KEY = f.DATE_KEY
GROUP BY 1 ORDER BY 1;

-- Verificar integridade dos totais por pedido
SELECT 
  f.ORDER_ID,
  do.TOTAL_AMOUNT AS ORDER_TOTAL,
  SUM(f.GROSS_AMOUNT) AS SOMA_ITENS,
  do.TOTAL_AMOUNT - SUM(f.GROSS_AMOUNT) AS DIFERENCA
FROM FACT_SALES f
JOIN DIM_ORDER do ON do.ORDER_SK = f.ORDER_SK
GROUP BY f.ORDER_ID, do.TOTAL_AMOUNT
HAVING ABS(do.TOTAL_AMOUNT - SUM(f.GROSS_AMOUNT)) > 0.01;

-- Verificar se todas as dimensões têm dados
SELECT 'DIM_DATE' AS DIMENSAO, COUNT(*) AS REGISTROS FROM CORE.DIM_DATE
UNION ALL
SELECT 'DIM_CUSTOMER', COUNT(*) FROM CORE.DIM_CUSTOMER
UNION ALL  
SELECT 'DIM_PRODUCT', COUNT(*) FROM CORE.DIM_PRODUCT
UNION ALL
SELECT 'DIM_ORDER', COUNT(*) FROM CORE.DIM_ORDER;
